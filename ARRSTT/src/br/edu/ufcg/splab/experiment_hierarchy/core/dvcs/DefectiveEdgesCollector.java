package br.edu.ufcg.splab.experiment_hierarchy.core.dvcs;

import br.edu.ufcg.splab.experiment_hierarchy.core.api.InterfaceDvc;
import br.edu.ufcg.splab.experiment_hierarchy.util.ErrorStructure;
import br.edu.ufcg.splab.experiment_hierarchy.util.testcollections.TestSuite;
/*
 * Change														Author				Date
 * -------------------------------------------------------------------------------------------
 * Creation														Wesley Silva		2015-09-13
 * 
 */
/**
 * <b>Objective:</b> Used in the ARRSTT Selection Experiment, this class is responsible
 * for collecting the number of defective edges in the TestSuite generated by the
 * ExecutableTreatment.
 * <br>
 * <b>Description of use</b>: A Selection ExecutableTreatment is passed to this class so
 * it can calculate and save the amount of defective edges in the TestSuite generated
 * by the treatment.
 * 
 * @author Wesley
 *
 */
public class DefectiveEdgesCollector implements InterfaceDvc {
	
	@Override
	/**
	 * <b>Objective:</b>: Calculate the amount of defective edges found in the TestSuite
	 * generated by the Executable treatment in the tuple and add it in a StringBuffer.
	 * <br>
	 * <b>Example of use</b>: In the ARRSTT Selection Experiment this method receives a SelectionTreatment
	 * so it can generate TestSuites with defective edges. The amount of those is calculated and
	 * stored in a StringBuffer that will be returned.
	 * 
	 * @param treatment
	 * 			A tuple of ExecutableTreatments that is going to generate a TestSuite.
	 * @return The StringBuffer used to store the amount of defective edges.
	 */
	public StringBuffer collect(TestSuite testSuite) {
		ErrorStructure errorStructure = new ErrorStructure(testSuite);
		return new StringBuffer(errorStructure.countDefectiveEdges() + "");
	}
	
	@Override
	public String toString() {
		return "DV DefectiveEdges";
	}

}
