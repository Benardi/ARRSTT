package br.edu.ufcg.splab.experiment_hierarchy.core.datacollectors;

import br.edu.ufcg.splab.experiment_hierarchy.core.treatments.ExecutableTreatment;
import br.edu.ufcg.splab.experiment_hierarchy.util.ErrorStructure;
import br.edu.ufcg.splab.experiment_hierarchy.util.Tuple;
import br.edu.ufcg.splab.experiment_hierarchy.util.testcollections.TestSuite;

/* Change		Author		Date
 * Creation		Wesley		2015-09-13
 */
/**
 * Objective: Used in the ARRSTT Selection Experiment, this class is responsible
 * for collecting the number of failures in the TestSuite generated by the
 * ExecutableTreatment.
 * 
 * Description of use: A Selection ExecutableTreatment is passed to this class so
 * it can calculate and save the amount of failures in the TestSuite generated
 * by the treatment.
 * 
 * @author Wesley
 *
 */
public class ARRSTTFailuresCollector implements DependentVariableCollector {

	@Override
	/**
	 * Objective: Calculate the amount of failures found in the TestSuite
	 * generated by the Executable treatment in the tuple and add it in a StringBuffer.
	 * 
	 * Example of use: In the ARRSTT Selection Experiment this method receives a SelectionTreatment
	 * so it can generate TestSuites with defective edges. The amount of failures is calculated and
	 * stored in a StringBuffer that will be returned.
	 * 
	 * @param treatment
	 * 			A tuple of ExecutableTreatments that is going to generate a TestSuite.
	 * @param The StringBuffer used to store the amount of failures.
	 */
	public StringBuffer collect(Tuple<ExecutableTreatment> treatment) {
		TestSuite testSuite = treatment.get(0).execute();
		
		ErrorStructure errorStructure = new ErrorStructure(testSuite);
		return new StringBuffer(errorStructure.countFails() + "");
	}
	
	@Override
	public String toString() {
		return "DV Failures";
	}

}
